parameters:
  caching: ''
  vmsize: ''
  osdisktype: ''
  osdisksize: ''
  jobs: '2'
  clients: '4'
  duration: ''
  scalefactor: ''
  datadir: '/var/lib/postgresql/12/main'

jobs:
- job: ${{ format('{0}_{1}_Scalefactor_{2}_{3}GB_{4}', parameters.vmsize, parameters.caching, parameters.scalefactor, parameters.osdisksize, parameters.osdisktype) }}
  displayName: ${{ format('{0}_{1}_Scalefactor_{2}_{3}GB_{4}', parameters.vmsize, parameters.caching, parameters.scalefactor, parameters.osdisksize, parameters.osdisktype) }}
  steps:
  - bash: |
      set -ux
      echo "Setting variables"
      export GROUP="$(cat /dev/urandom | tr -dc 'a-z' | fold -w 8 | head -n 1)"
      echo "##vso[task.setvariable variable=GROUP]${GROUP}"
      
      set -e
      echo "Generated resource group name: '$GROUP'"

      export CACHING="${{ parameters.cache }}"
      export NODE_VM_SIZE="${{ parameters.vmsize }}"
      export NODE_OSDISK_TYPE="${{ parameters.osdisktype }}"
      export NODE_OSDISK_SIZE="${{ parameters.osdisksize }}"

      # pgbench
      export JOBS="${{ parameters.jobs }}"
      export CLIENTS="${{ parameters.clients }}"
      export DURATION="${{ parameters.duration }}"
      export SCALE_FACTOR="${{ parameters.scalefactor }}"
      export DATA_DIR="${{ parameters.datadir }}"
    displayName: initialize variables
  - bash: ./scripts/auth.sh
    displayName: "login to azure"
  - bash: ./scripts/cli.sh
    displayName: "install azure cli preview"
  - bash: ./scripts/capture.sh
    displayName: "initialize metrics capture"
  - bash: ./scripts/cluster.sh
    displayName: "provision azure resources"
  - bash: ./scripts/manifests.sh
    displayName: "apply manifests and run tests"
  - bash: ./scripts/emit.sh
    displayName: "emit metrics"
  - bash: ./scripts/delete.sh
    displayName: "cleanup resource group"
    condition: always()